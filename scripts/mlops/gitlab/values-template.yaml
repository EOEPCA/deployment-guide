global:
  edition: ce
  hosts:
    domain: {{ getenv "INGRESS_HOST" }}
  ingress:
    configureCertmanager: false
    class: {{ getenv "INGRESS_CLASS" }}
    provider: {{ getenv "INGRESS_CLASS" }}
    tls:
      external: true
    annotations:
      {{- range $key, $value := (datasource "annotations") }}
      {{ $key }}: "{{ $value }}"
      {{- end }}
    kubernetes.io/tls-acme: true

  minio:
    enabled: false

  appConfig:
  {{- if eq (getenv "MLOPS_OIDC_ENABLED") "true" }}
    omniauth:
      enabled: true
      allowSingleSignOn: ["saml", "openid_connect"]
      blockAutoCreatedUsers: false
      providers:
        - secret: openid-connect
  {{- else }}
    omniauth:
      enabled: false
  {{- end }}
    lfs:
      enabled: true
      bucket: gitlab-lfs-storage
      connection:
        secret: object-storage
        key: connection
    artifacts:
      enabled: false
    uploads:
      enabled: false
    packages:
      enabled: false
    backups:
      bucket: gitlab-backup-storage
      tmpBucket: gitlab-tmp-storage

  registry:
    enabled: false

upgradeCheck:
  enabled: false

gitlab:
  gitaly:
    replicas: 1
    persistence:
      storageClass: {{ getenv "STORAGE_CLASS" }}
  webservice:
    ingress:
      tls:
        secretName: gitlab-tls
    resources:
      requests:
        cpu: 200m
        memory: 2G
    minReplicas: 1
    replicas: 1

  kas:
    replicas: 1
    ingress:
      tls:
        secretName: kas-tls

  toolbox:
    backups:
      objectStorage:
        config:
          secret: gitlab-storage-config
          key: config
  sidekiq:
    enabled: true
    resources:
      requests:
        cpu: 200m
        memory: 1Gi
      limits:
        cpu: 500m
        memory: 2Gi
registry:
  enabled: false
  ingress:
    tls:
      secretName: registry-tls

minio:
  ingress:
    tls:
      secretName: minio-tls

certmanager:
  install: false

nginx-ingress:
  enabled: false

nginx-ingress-geo:
  enabled: false

prometheus:
  install: false

gitlab-runner:
  install: false

redis:
  global:
    storageClass: {{ getenv "STORAGE_CLASS" }}
  metrics:
    enabled: false

postgresql:
  replicas: 1
  global:
    storageClass: {{ getenv "STORAGE_CLASS" }}
  metrics:
    enabled: false