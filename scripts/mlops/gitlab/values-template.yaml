global:
  edition: ce
  hosts:
    domain: ${INGRESS_HOST}
  ingress:
    configureCertmanager: false
    class: apisix
    provider: apisix
    tls:
      external: true
    annotations:
      ${CLUSTER_ISSUER_ANNOTATION}
      apisix.ingress.kubernetes.io/use-regex: "true"
      kubernetes.io/tls-acme: true

  minio:
    enabled: false

  appConfig:
    ${MLOPS_OIDC_OMNIAUTH_CONFIG}
    lfs:
      enabled: true
      bucket: gitlab-lfs-storage
      connection:
        secret: object-storage
        key: connection
    artifacts:
      enabled: false
    uploads:
      enabled: false
    packages:
      enabled: false
    backups:
      bucket: gitlab-backup-storage
      tmpBucket: gitlab-tmp-storage

  registry:
    enabled: false

upgradeCheck:
  enabled: false

gitlab:
  gitaly:
    persistence:
      storageClass: ${STORAGE_CLASS}
  webservice:
    ingress:
      tls:
        secretName: gitlab-tls
    # Limit resources for a small (resource limited) deployment
    # resources:
    #   requests:
    #     cpu: 200m
    #     memory: 2G
    # minReplicas: 1

  kas:
    ingress:
      tls:
        secretName: kas-tls

  toolbox:
    backups:
      objectStorage:
        config:
          secret: gitlab-storage-config
          key: config
  sidekiq:
    enabled: true
    # Limit resources for a small (resource limited) deployment
    # resources:
    #   requests:
    #     cpu: 500m

registry:
  enabled: false
  ingress:
    tls:
      secretName: registry-tls

minio:
  ingress:
    tls:
      secretName: minio-tls

certmanager:
  install: false

nginx-ingress:
  enabled: false

nginx-ingress-geo:
  enabled: false

prometheus:
  install: false

gitlab-runner:
  install: false

redis:
  global:
    storageClass: ${STORAGE_CLASS}
  metrics:
    enabled: false

postgresql:
  global:
    storageClass: ${STORAGE_CLASS}
  metrics:
    enabled: false