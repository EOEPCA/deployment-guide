ingress:
  enabled: true
  className: apisix
  domain: application-quality.${INGRESS_HOST}
  annotations:
    ${CLUSTER_ISSUER_ANNOTATION}
    kubernetes.io/ingress.class: apisix
  tls:
    - hosts:
      - application-quality.${INGRESS_HOST}
      secretName: application-quality-tls

web:
  image:
    repository: eoepca/eoepca-appquality-frontend
    tag: 2025-01-15.1
    pullPolicy: IfNotPresent
    #pullSecrets:
    #  - name: spaceapps-nexus-asb-ro
  serviceType: NodePort
  servicePort: 80
  containerPort: 80
  replicaCount: 1

api:
  image:
    repository: eoepca/eoepca-appquality-backend
    tag: 2025-01-10.1
    pullPolicy: IfNotPresent
    #pullSecrets:
    #  - name: spaceapps-nexus-asb-ro
  serviceType: NodePort
  servicePort: 8000
  containerPort: 8000
  replicaCount: 1
  adminUser: "admin"
  adminPassword: "admin"
  adminEmail: "admin@admin"

persistence:
  enabled: true
  createStorageClass: false
  storageClassName: ${STORAGE_CLASS}
  accessMode:
  - ReadWriteOnce
  size: 1Gi

calrissian:
  image: "terradue/calrissian:0.14.0"
  volumeSize: "5Gi"
  maxCores: "2"
  maxRam: "2Gi"
  storageClassName: ${STORAGE_CLASS}

opensearch:
  # Enable or disable saving runs and reports in Opensearch (default: false)
  enabled: false
  # Internal URL of the Opensearch servier (e.g. https://opensearch-cluster-master.application-quality-opensearch.svc.cluster.local:9200)
  #url:
  # Name of the Opensearch index where the pipeline runs must be stored (default: application-quality-pipeline-runs)
  #indexRuns: 
  # Name of the Opensearch index where the pipeline run reports must be stored (default: application-quality-pipeline-run-reports)
  #indexReports:
  # Username and password of an Opensearch user who has access to the two indices above
  #username:
  #password:

web_server:
  access_scheme: http
  force_ssl_redirect: true
  deploy_mode: prod
  instance_name: EOEPCA-plus-Testing
  theme: eoepca-develop
  log_level: DEBUG
  version: v0.0.1
  additional_allowed_host: "localhost, 127.0.0.1, proxy,"
  django_configuration: prod

entrypoint:
  collectstatic: "true"
  migrate_db: "true"
  load_data_on_init_db: "true"

db:
  image:
    repository: postgres
    tag: 13
    pullPolicy: IfNotPresent
  name: "appquality"
  user: "admin"
  password: "admin"
  serviceType: NodePort
  servicePort: 5432
  containerPort: 5432
  storage:
    size: 2Gi

external_tools:
  registry_url: "http://nexus.spaceapplications.com"

nodeSelector: {}

oidc:
  enabled: ${OIDC_APPLICATION_QUALITY_ENABLED}
  realmBaseUrl: ${HTTP_SCHEME}://${KEYCLOAK_HOST}/realms/${REALM}
  # Client ID and Secret set in SealedSecret
  clientId: ${APP_QUALITY_CLIENT_ID}
  clientSecret: ${APP_QUALITY_CLIENT_SECRET}
  preferredUsernameClaimField: "preferred_username"
  logoutEndpointPath: "end_session"
  logoutRedirectUrlParameterName: "post_logout_redirect_url"
  postLogoutRedirectUrl: "${HTTP_SCHEME}://application-quality.${INGRESS_HOST}/"
  loginUrl: "/oidc/authenticate"
  loginRedirectUrl:  "${HTTP_SCHEME}://application-quality.${INGRESS_HOST}/"
  logoutRedirectUrl: "/"
  rpRedirectUri:  "${HTTP_SCHEME}://application-quality.${INGRESS_HOST}/"
  rpSignAlgo: "RS256"

sonarqube:
  enabled: false
  serverUrl: ""
  accessToken: ""

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  create: false