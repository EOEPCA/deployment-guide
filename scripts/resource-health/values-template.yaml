global:
  defaultInternalIssuerRef:
    name: {{ getenv "INTERNAL_CLUSTER_ISSUER" }}

resource-health:
  telemetry_api:
    # Limit resources for small deployment
    # replicaCount: 1
    environmentFixed:
      - name: FAST_API_ROOT_PATH
        value: "/api/telemetry"

  check_api:
    # Limit resources for small deployment
    # replicaCount: 1
    environmentFixed:
      - name: FAST_API_ROOT_PATH
        value: "/api/healthchecks"
  web:
    # Limit resources for small deployment
    # replicaCount: 1
    environmentFixed:
      - name: NEXT_PUBLIC_CHECK_MANAGER_ENDPOINT
        value: "{{ getenv "HTTP_SCHEME" }}://resource-health.{{ getenv "INGRESS_HOST" }}/api/healthchecks"
      - name: NEXT_PUBLIC_TELEMETRY_ENDPOINT
        value: "{{ getenv "HTTP_SCHEME" }}://resource-health.{{ getenv "INGRESS_HOST" }}/api/telemetry/v1"
  healthchecks:
    checks:
      - name: mockapi-check
        schedule: "*/1 * * * *"
        script: "https://raw.githubusercontent.com/EOEPCA/resource-health/refs/tags/v0.1.0-demo/pytest-health/instrumentation/examples/mock_api_check.py"
        requirements: "https://gist.githubusercontent.com/tilowiklundSensmetry/a9fefe2873b731b483f554607a82deaa/raw/1136a82ca3c8f28b1ad4d895871514185927dd1c/requirements.txt"
        env:
          - name: MOCK_API_HOST
            value: http://resource-health-mock-api:5000
  # Limit resources for small deployment
  # mock_api:
  #   replicaCount: 1

opensearch:
  persistence:
    storageClass: {{ getenv "STORAGE_CLASS" }}
  # Limit resources for small deployment
  # replicas: 1
  # resources:
  #   requests:
  #     cpu: 500m
