{{- if eq (getenv "INGRESS_CLASS") "nginx" }}
ingress:
  enabled: true
  className: "nginx"
  annotations:
    {{- range $key, $value := (datasource "annotations") }}
    {{ $key }}: "{{ $value }}"
    {{- end }}
  host: "eoapi.{{ getenv "INGRESS_HOST" }}"
  {{- if eq ( getenv "HTTP_SCHEME" ) "https" }}
  tls:
    enabled: true
    certManager: false
    secretName: "eoapi-tls"
  {{- end }}
{{- else }}
ingress:
  enabled: false
{{- end }}

db:
  enabled: false

postgrescluster:
  enabled: true
  postgresVersion: 16
  postGISVersion: 3.4
  pgBouncerReplicas: 1
  monitoring: false
  instances:
    - name: eoapi
      replicas: 1
      dataVolumeClaimSpec:
        storageClassName: {{ getenv "STORAGE_CLASS" }}
        accessModes:
          - "ReadWriteMany"
        resources:
          requests:
            storage: 1Gi
  backupsStorageClassName: {{ getenv "STORAGE_CLASS" }}
  nfsCustom:
    - name: repo1

pgstacBootstrap:
  enabled: true
  settings:
    envVars:
      KEEP_ALIVE: "false"

raster:
  enabled: true
  image:
    tag: "1.4.0"
  settings:
    envVars:
      AWS_S3_ENDPOINT: {{ getenv "S3_HOST" }}
      AWS_ACCESS_KEY_ID: {{ getenv "S3_ACCESS_KEY" }}
      AWS_SECRET_ACCESS_KEY: {{ getenv "S3_SECRET_KEY" }}
      AWS_VIRTUAL_HOSTING: "FALSE"
    resources:
      requests:
        memory: "3072Mi"

stac:
  enabled: true
  settings:
    envVars:
      EOAPI_STAC_EXTENSIONS: "filter,query,sort,fields,pagination,transaction"
      EOAPI_STAC_CORS_METHODS: "GET,POST,PUT,OPTIONS"
    resources:
      limits:
        cpu: "1280m"
        memory: "1536Mi"
      requests:
        cpu: "512m"
vector:
  enabled: true
  settings:
    resources:
      limits:
        memory: "1536Mi"
      requests:
        memory: "1024Mi"
    envVars:
      # needs to on so we can call /refresh for integration tests
      TIPG_DEBUG: "True"
      TIPG_CATALOG_TTL: "30"
