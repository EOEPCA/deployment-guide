---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: zoo-api
spec:
  http:
    # Route for main API
    # * Requires Authz
    # * But do not include OIDC Authn flow, which cannot conveniently be followed for an API
    #   * Instead assume that the JWT is obtained independently
    - name: zoo-api
      match:
        hosts:
          - zoo-apx.$INGRESS_HOST
        paths:
          - /*
      backends:
        - serviceName: zoo-project-dru-service
          servicePort: 80
      plugins:
        # Require authorization for access to API
        - name: authz-keycloak
          enable: true
          config:
            discovery: "https://auth-apx.$INGRESS_HOST/realms/eoepca/.well-known/uma2-configuration"
            lazy_load_paths: true
            ssl_verify: false
          secretRef: oapip-engine-client
        # Allow CORS access
        - name: cors
          enable: true
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: zoo-apx
spec:
  dnsNames:
    - zoo-apx.$INGRESS_HOST
  issuerRef:
    kind: ClusterIssuer
    name: ${CLUSTER_ISSUER}-apx
  secretName: zoo-apx-tls
  usages:
    - digital signature
    - key encipherment
    - server auth
---
apiVersion: apisix.apache.org/v2
kind: ApisixTls
metadata:
  name: zoo-apx
spec:
  hosts:
    - zoo-apx.$INGRESS_HOST
  secret:
    name: zoo-apx-tls
    namespace: processing
