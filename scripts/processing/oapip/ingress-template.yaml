---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: zoo-api
  namespace: processing
spec:
  http:
    # Open access to zoo OpenAPI docs
    - name: zoo-docs
      match:
        hosts:
          - zoo.{{ getenv "INGRESS_HOST" }}
        paths:
          - /*
        exprs:
          - subject:
              scope: Path
            op: RegexMatch
            value: "^/(ogc-api/api.*|swagger-ui.*)"
      backends:
        - serviceName: zoo-project-dru-service
          servicePort: 80
      plugins:
        # Allow CORS access
        - name: cors
          enable: true

    # Authorized access to zoo API
    - name: zoo-protected
      match:
        hosts:
          - zoo.{{ getenv "INGRESS_HOST" }}
        paths:
          - /*
      backends:
        - serviceName: zoo-project-dru-service
          servicePort: 80
      plugins:
        # Authenticate - expect JWT in `Authorization: Bearer` header
        - name: openid-connect
          enable: true
          config:
            discovery: "https://{{ getenv "KEYCLOAK_HOST" }}/realms/{{ getenv "REALM" }}/.well-known/openid-configuration"
            realm: eoepca
            client_id: {{ getenv "OAPIP_CLIENT_ID" }}
            client_secret: {{ getenv "OAPIP_CLIENT_SECRET" }}
            # Following settings to enable support for both interactive and API access
            use_jwks: true                              # (default: false)
            bearer_only: false                          # (default: false)
            set_access_token_header: true               # (default: true)
            access_token_in_authorization_header: true  # (default: false)
        # Authorization - required for access to API
        - name: authz-keycloak
          enable: true
          config:
            discovery: "https://{{ getenv "KEYCLOAK_HOST" }}/realms/{{ getenv "REALM" }}/.well-known/uma2-configuration"
            lazy_load_paths: true
            ssl_verify: false
            client_id: {{ getenv "OAPIP_CLIENT_ID" }}
            client_secret: {{ getenv "OAPIP_CLIENT_SECRET" }}
        # Allow CORS access
        - name: cors
          enable: true
{{- if eq ( getenv "HTTP_SCHEME" ) "https" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: zoo
  namespace: processing
spec:
  dnsNames:
    - zoo.{{ getenv "INGRESS_HOST" }}
  issuerRef:
    kind: ClusterIssuer
    name: {{ getenv "CLUSTER_ISSUER" }}
  secretName: zoo-tls
  usages:
    - digital signature
    - key encipherment
    - server auth
---
apiVersion: apisix.apache.org/v2
kind: ApisixTls
metadata:
  name: zoo
  namespace: processing
spec:
  hosts:
    - zoo.{{ getenv "INGRESS_HOST" }}
  secret:
    name: zoo-tls
    namespace: processing
{{- end }}
