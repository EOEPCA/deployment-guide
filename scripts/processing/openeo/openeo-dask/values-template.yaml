replicaCount: 1

image:
  repository: eoepca/openeo-dask-backend
  tag: "latest"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false  # We handle ingress separately

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

config:
  backend:
    id: "openeo-dask"
    title: "OpenEO Dask Backend"
    description: "OpenEO backend powered by Dask distributed computing"
    
  dask:
    gateway:
      address: "{{ getenv "DASK_GATEWAY_URL" "http://dask-gateway.dask-gateway:80" }}"
      auth:
        type: "basic"
        password: "{{ getenv "DASK_GATEWAY_PASSWORD" }}"
    cluster:
      worker:
        cores: {{ getenv "DASK_WORKER_CORES" "2" }}
        memory: "{{ getenv "DASK_WORKER_MEMORY" "4Gi" }}"
      max_workers: {{ getenv "DASK_MAX_WORKERS" "10" }}
      adaptive:
        enabled: true
        minimum: 1
        maximum: {{ getenv "DASK_MAX_WORKERS" "10" }}
        
  storage:
    s3:
      endpoint: "{{ getenv "S3_ENDPOINT" }}"
      access_key: "{{ getenv "S3_ACCESS_KEY" }}"
      secret_key: "{{ getenv "S3_SECRET_KEY" }}"
      region: "{{ getenv "S3_REGION" "us-east-1" }}"
      buckets:
        data: "openeo-data"
        results: "openeo-results"
        
  {{- if getenv "STAC_CATALOG_URL" }}
  stac:
    catalog_url: "{{ getenv "STAC_CATALOG_URL" }}"
  {{- end }}
  
  {{- if eq ( getenv "OPENEO_ENABLE_OIDC" ) "yes" }}
  auth:
    oidc:
      enabled: true
      providers:
        - id: "eoepca"
          title: "EOEPCA"
          issuer: "{{ getenv "OIDC_ISSUER_URL" }}"
          scopes: ["openid", "profile", "email"]
          client_id: "{{ getenv "OPENEO_CLIENT_ID" }}"
    basic:
      enabled: false
  {{- else }}
  auth:
    oidc:
      enabled: false
    basic:
      enabled: true
      # Development only - use proper authentication in production
      users:
        - username: "user"
          password: "user123"
  {{- end }}

  processes:
    # Enabled OpenEO processes for Dask backend
    enabled:
      - load_collection
      - save_result
      - filter_bbox
      - filter_temporal
      - filter_bands
      - reduce_dimension
      - apply
      - apply_dimension
      - aggregate_temporal
      - resample_spatial
      - mask
      - merge_cubes
      - ndvi
      - normalized_difference
      - apply_kernel
      - reduce_spatial
      - aggregate_spatial
      - array_element
      - count
      - first
      - last
      - max
      - mean
      - median
      - min
      - product
      - sd
      - sum
      - variance

persistence:
  enabled: true
  storageClass: "{{ getenv "STORAGE_CLASS" }}"
  size: 10Gi
  
serviceAccount:
  create: true
  name: "openeo-dask"
  
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services"]
      verbs: ["get", "list", "watch", "create", "delete"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch"]