---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: workspace-api
  namespace: workspace
spec:
  http:
    # Route for main API
    # * Requires Authz
    # * But do not include OIDC Authn flow, which cannot conveniently be followed for an API
    #   * Instead assume that the JWT is obtained independently
    - name: workspace-api
      match:
        hosts:
          - workspace-api.$INGRESS_HOST
        paths:
          - /*
      backends:
        - serviceName: workspace-api
          servicePort: 8080
      plugins:
        # Require authorization for access to API
        - name: authz-keycloak
          enable: true
          config:
            discovery: "${HTTP_SCHEME}://$KEYCLOAK_HOST/realms/${REALM}/.well-known/uma2-configuration"
            lazy_load_paths: true
            ssl_verify: false
            client_id: ${WORKSPACE_CLIENT_ID}
            client_secret: ${WORKSPACE_CLIENT_SECRET}
---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: workspace-api-swagger
  namespace: workspace
spec:
  http:
    # Route for use of API via swagger docs
    # * Requires both Authn and Authz
    - name: workspace-api-swagger
      match:
        hosts:
          - workspace-swagger.$INGRESS_HOST
        paths:
          - /*
      backends:
        - serviceName: workspace-api
          servicePort: 8080
      plugins:
        # Rewrite / to /docs
        - name: proxy-rewrite
          enable: true
          config:
            regex_uri: ["^(/)?$", "/docs"]
        # Authenticate - to obtain JWT that supports API (Authz) requests
        - name: openid-connect
          enable: true
          config:
            access_token_in_authorization_header: true
            discovery: "${HTTP_SCHEME}://$KEYCLOAK_HOST/realms/${REALM}/.well-known/openid-configuration"
            client_id: ${WORKSPACE_CLIENT_ID}
            client_secret: ${WORKSPACE_CLIENT_SECRET}
        # Require authorization for access to API
        - name: authz-keycloak
          enable: true
          config:
            discovery: "${HTTP_SCHEME}://$KEYCLOAK_HOST/realms/${REALM}/.well-known/uma2-configuration"
            lazy_load_paths: true
            ssl_verify: false
            client_id: ${WORKSPACE_CLIENT_ID}
            client_secret: ${WORKSPACE_CLIENT_SECRET}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: workspace-api
  namespace: workspace
spec:
  dnsNames:
    - workspace-api.$INGRESS_HOST
    - workspace-swagger.$INGRESS_HOST
  issuerRef:
    kind: ClusterIssuer
    name: ${CLUSTER_ISSUER}
  secretName: workspace-api-tls
  usages:
    - digital signature
    - key encipherment
    - server auth
---
apiVersion: apisix.apache.org/v2
kind: ApisixTls
metadata:
  name: workspace-api
  namespace: workspace
spec:
  hosts:
    - workspace-api.$INGRESS_HOST
    - workspace-swagger.$INGRESS_HOST
  secret:
    name: workspace-api-tls
    namespace: workspace
